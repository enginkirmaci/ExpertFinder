@model SettingsViewModel
@using Microsoft.AspNetCore.Http.Authentication

@{
    ViewBag.Title = "Ayarlarım";
}

<div class="container manage-index">
    @await Component.InvokeAsync("ManageNav")

    <div class="eleven columns">

        <div id="titlebar">
            <h4>Profil Güvenirliği</h4>
        </div>

        <table class="manage-table activity">
            <tr>
                <td class="title">Email</td>
                @if (Model.User.EmailConfirmed)
                {
                    <td><span class="verified-provider"><i class="fa fa-check"></i> Onaylı</span></td>
                }
                else
                {
                    <td><a asp-action="VerifyEmail" asp-controller="Manage" class="link-button">Onayla</a></td>
                }
            </tr>
            <tr>
                <td class="title">Cep Telefonu</td>
                @if (Model.User.PhoneNumberConfirmed)
                {
                    <td><span class="verified-provider"><i class="fa fa-check"></i> Onaylı</span></td>
                }
                else
                {
                    <td><a href="#">Onayla</a></td>
                }
            </tr>
        </table>

        <form asp-controller="Manage" asp-action="RemoveLogin" method="post" role="form">
            <table class="manage-table activity">
                @foreach (var account in Model.CurrentLogins)
                {
                    <tr>
                        <td class="title">
                            @account.LoginProvider
                            @if ((bool)ViewData["ShowRemoveButton"])
                            {
                                <input asp-for="@account.LoginProvider" type="hidden" />
                                <input asp-for="@account.ProviderKey" type="hidden" />
                                <span>( </span>
                                <button name="RemoveButton" class="link-button" value="@(account.LoginProvider+":" + account.ProviderKey)" title="@account.LoginProvider ile bağlantınızı kaldırır.">
                                    Kaldır
                                </button>
                                <span> )</span>
                            }
                        </td>
                        <td><span class="verified-provider"><i class="fa fa-check"></i> Onaylı</span></td>
                    </tr>
                }
            </table>
        </form>

        <form asp-controller="Manage" asp-action="LinkLogin" method="post" role="form">
            <table class="manage-table activity">
                @if (Model.OtherLogins.Count > 0)
                {
                    @foreach (var provider in Model.OtherLogins)
                    {
                        <tr>
                            <td class="title">@provider.DisplayName</td>
                            <td>
                                <button type="submit" class="link-button" name="provider" value="@provider.AuthenticationScheme" title="@provider.DisplayName ile bağlanın.">
                                    Bağlan
                                </button>
                            </td>
                        </tr>
                    }
                }
            </table>
        </form>

        @if (TempData.ContainsKey("messagesuccess") && TempData.ContainsKey("message"))
        {
            <div class="notification @(((bool)TempData["messagesuccess"]) == true ? " success" : " error" )">
                @foreach (var message in TempData["message"].ToString().Split(';'))
                {
                    <p>@message</p>
                }
            </div>
        }

        @if (Model.HasPassword)
        {
            <div id="titlebar" class="margin-top-40">
                <h4>Şifre Değiştirme</h4>
            </div>

            <form asp-controller="Manage" asp-action="ChangePassword" method="post" role="form">

                <p class="form-row form-row-wide">
                    <label asp-for="OldPassword"></label>
                    <input asp-for="OldPassword" />
                    <span asp-validation-for="OldPassword" class="text-danger"></span>
                </p>

                <p class="form-row form-row-wide">
                    <label asp-for="NewPassword"></label>
                    <input asp-for="NewPassword" />
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </p>

                <p class="form-row form-row-wide">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </p>

                <p class="form-row">
                    <button type="submit" class="button">Değiştir</button>
                </p>

                <div asp-validation-summary="All" class="notification error"></div>
            </form>
        }
        else
        {
            <div id="titlebar" class="margin-top-40">
                <h4>Şifre Oluştur</h4>
            </div>

            <p class="note">Email adresiniz ile giriş yapmak için şifre oluşturabilirsiniz.</p>

            <form asp-controller="Manage" asp-action="SetPassword" method="post" role="form">
                <input type="hidden" asp-for="OldPassword" value="123456" />

                <p class="form-row form-row-wide">
                    <label asp-for="NewPassword"></label>
                    <input asp-for="NewPassword" />
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </p>

                <p class="form-row form-row-wide">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </p>

                <p class="form-row">
                    <button type="submit" class="button">Oluştur</button>
                </p>

                <div asp-validation-summary="All" class="notification error"></div>
            </form>
        }

        @if (TempData.ContainsKey("passwordmessagesuccess") && TempData.ContainsKey("message"))
        {
            <div class="notification @(((bool)TempData["passwordmessagesuccess"]) == true ? " success" : " error" )">
                @foreach (var message in TempData["message"].ToString().Split(';'))
                {
                    <p>@message</p>
                }
            </div>
        }

        <div id="titlebar" class="margin-top-40">
            <h4>Sms Ayarları</h4>
        </div>

        <form asp-controller="Manage" asp-action="SMSSetting" method="post" role="form">

            <p class="form-row checkboxes">
                <input asp-for="SmsNotAllowed" />
                <label asp-for="SmsNotAllowed" class="rememberme"></label>
            </p>

            <p class="form-row">
                <button type="submit" class="button">Kaydet</button>
            </p>
        </form>

        @if (TempData.ContainsKey("smssettingmessagesuccess") && TempData.ContainsKey("message"))
        {
            <div class="notification @(((bool)TempData["smssettingmessagesuccess"]) == true ? " success" : " error")">
                @foreach (var message in TempData["message"].ToString().Split(';'))
                {
                    <p>@message</p>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}