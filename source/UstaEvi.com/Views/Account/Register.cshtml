@model RegisterViewModel
@inject SignInManager<User> SignInManager

<div id="titlebar" class="single">
    <div class="container">
        <div class="sixteen columns">
            <h2>@ViewBag.Title</h2>
        </div>
    </div>
</div>

<div class="container">
    <div class="five columns">
        @await Component.InvokeAsync("Content", new { content = ViewBag.Content })
    </div>
    <div class="six columns">
        <form asp-route="register" method="post" role="form">
            <input asp-for="IsCompany" type="hidden" />

            <p class="form-row form-row-wide">
                <label asp-for="FullName"></label>
                <input asp-for="FullName" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </p>

            <p class="form-row form-row-wide">
                <label asp-for="Email"></label>
                <input asp-for="Email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </p>

            <p class="form-row form-row-wide">
                <label asp-for="CellPhone"></label>
                <input asp-for="CellPhone" />
                <span asp-validation-for="CellPhone" class="text-danger"></span>
            </p>

            <p class="form-row form-row-wide">
                <label asp-for="Password"></label>
                <input asp-for="Password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </p>

            <p class="form-row form-row-wide">
                <label asp-for="ConfirmPassword"></label>
                <input asp-for="ConfirmPassword" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </p>

            @if (!Model.IsCompany)
            {
                <p class="form-row checkboxes">
                    <input name="GiveOffer" id="GiveOffer" type="checkbox" />
                    <label for="GiveOffer">
                        Hizmet Vermek istiyorum.
                    </label>
                </p>
            }

            <p class="form-row form-row-wide user-categories @(!Model.IsCompany ? "hide" : string.Empty)">
                <label asp-for="SelectedUserCategories"></label>
                <select asp-for="SelectedUserCategories" asp-items="Model.UserCategories" data-placeholder="Hizmet seçiniz" class="chosen-select" multiple=""></select>
            </p>

            <p class="form-row checkboxes">
                <input asp-for="PrivacyPolicy" />
                <label asp-for="PrivacyPolicy" class="rememberme">
                    <a href="/kullanicisozlesmesi/" class="kabul-link">Kullanıcı</a> ve
                    <a href="/gizlilikkosullari/" class="kabul-link">Gizlilik</a> koşullarını okudum ve kabul ediyorum.
                </label>
                <span asp-validation-for="PrivacyPolicy" class="text-danger"></span>
            </p>

            <div class="divider margin-top-0 margin-bottom-10 padding-reset"></div>

            <p class="form-row">
                <button type="submit" class="button">Kayıt Ol</button>
            </p>

            <div asp-validation-summary="All" class="notification error"></div>
        </form>
    </div>
    <div class="five columns">
        @{
            var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();

            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" role="form">
                <div>
                    <p>
                        @foreach (var provider in loginProviders)
                        {
                            <button type="submit" class="social-button @provider.Items["class"]" name="provider" value="@provider.AuthenticationScheme" title="@provider.DisplayName ile giriş yap">
                                <span class="icon"><i class="fa @provider.Items["icon"]"></i></span>
                                <span class="name"> @provider.DisplayName ile giriş yap</span>
                            </button>
                        }
                    </p>
                </div>
            </form>
        }
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}